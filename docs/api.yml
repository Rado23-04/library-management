openapi: 3.0.3
info:
  title: Library API
  version: 3.0.3
  description: STD22001
servers:
  - url: https://library.com
tags:
  - name: Books  
  - name: Author
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        #TODO3: add parameter to filter books by intervals of dates of the releaseDate
        - in: query
          name: Date start 
          description: Filter books with a release date greater than or equal to the specified date.
          required: false
          schema:
            type: string 
            format: date 
        - in: query
          name: date end 
          description: Filter books with a release date less than or equal to the specified date.
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
  #TODO2: complete GET (can be filtered by name) - PUT - DELETE
    get:
      summary: Get all author
      description: The returned author
      operationId: get author
      tags:
        - Author
      responses:
        200:
          description: The list of filtered author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      summary: Create or update a list of author
      operationId: crupdateAuthor
      tags:
        - Author
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /authors/{aId}:                
    delete:
      summary: Delete author 
      operationId: deletedAuthor 
      tags:
        - Author
      parameters:
        - name: aId
          in: path
          description: author identifier to be deleted
          schema:
            type: string
          required: true
      responses:
        200:
          description: The list of deleted author
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Author'    
  /books/{bookId}/authors/{authoursId}:
    put:
      summary: update books's author
      tags:
        - Author
      parameters:
        - name: bookId
          in: path
          description: id book update 
          required: true
          schema:
            type: integer
        - name: authoursId
          in: path
          description: id author 
          required: true
          schema: 
            type: integer
      responses:
        200:
          description: succes update books's author
        400:
          description: failed, request fail
        404:
          description: not found      
       
        


components:
  schemas:
    Book:
      allOf:
        - $ref: '#/components/schemas/crupdateBook'
        - $ref: '#/components/schemas/Author'  
    Author:  
      type: object
      properties:
        id:
          type: string
        authorname:
          type: string
        sex:
          $ref: '#/components/schemas/Sex'
    Sex:
      type: string
      enum:
        - M
        - F
    crupdateBook:
      properties:
        id:
          type: string
        bookName:
          type: string
        pageNumbers:
          type: string
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER      
      

